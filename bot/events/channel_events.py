"""–û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏–π –∫–∞–Ω–∞–ª–æ–≤"""

import discord
from .base_event_handler import BaseEventHandler
from bot.analytics.analytics_manager import analytics_manager


class ChannelEventHandler(BaseEventHandler):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏–π –∫–∞–Ω–∞–ª–æ–≤ —Å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π –∞–Ω–∞–ª–∏—Ç–∏–∫–∏.
    """
    
    async def on_guild_channel_create(self, channel):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∫–∞–Ω–∞–ª–∞"""
        if not self.is_feature_enabled('channel_events'):
            return
            
        channel_type = "üìù —Ç–µ–∫—Å—Ç–æ–≤—ã–π" if isinstance(channel, discord.TextChannel) else "üé§ –≥–æ–ª–æ—Å–æ–≤–æ–π"
        log_channel = self.get_log_channel(channel.guild, 'channel_events')
        
        embed = self.create_embed(
            title="üéâ –°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π –∫–∞–Ω–∞–ª!",
            description=f"**–¢–∏–ø –∫–∞–Ω–∞–ª–∞:** {channel_type}\n**–ù–∞–∑–≤–∞–Ω–∏–µ:** {channel.mention}",
            color=discord.Color.green()
        )
        await log_channel.send(embed=embed)
        analytics_manager.data['channels']['created'] += 1
        analytics_manager.save()
    
    async def on_guild_channel_delete(self, channel):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∫–∞–Ω–∞–ª–∞"""
        if not self.is_feature_enabled('channel_events'):
            return
            
        channel_type = "üìù —Ç–µ–∫—Å—Ç–æ–≤—ã–π" if isinstance(channel, discord.TextChannel) else "üé§ –≥–æ–ª–æ—Å–æ–≤–æ–π"
        log_channel = self.get_log_channel(channel.guild, 'channel_events')
        
        embed = self.create_embed(
            title="üóëÔ∏è –ö–∞–Ω–∞–ª —É–¥–∞–ª–µ–Ω!",
            description=f"**–¢–∏–ø –∫–∞–Ω–∞–ª–∞:** {channel_type}\n**–ù–∞–∑–≤–∞–Ω–∏–µ:** {channel.name}",
            color=discord.Color.red()
        )
        await log_channel.send(embed=embed)
        analytics_manager.data['channels']['deleted'] += 1
        analytics_manager.save() 