"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≥–æ–ª–æ—Å–æ–≤—ã—Ö —Å–æ–±—ã—Ç–∏–π
"""

import discord
from .base_event_handler import BaseEventHandler
from bot.analytics.analytics_manager import analytics_manager


class VoiceEventHandler(BaseEventHandler):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–±—ã—Ç–∏–π –≥–æ–ª–æ—Å–æ–≤–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —Å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π –∞–Ω–∞–ª–∏—Ç–∏–∫–∏.
    """
    
    async def on_voice_state_update(self, member: discord.Member, 
                                  before: discord.VoiceState, 
                                  after: discord.VoiceState):
        """–û–±—Ä–∞–±–æ—Ç–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è"""
        if not self.is_feature_enabled("voice_activity"):
            return
            
        log_channel = self.get_log_channel(member.guild, 'voice_activity')
        
        if before.channel is None and after.channel is not None:
            embed = self.create_embed(
                title="üéß –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—à–µ–ª –≤ –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª!",
                description=f"{member.mention} –∑–∞—à–µ–ª –≤ –∫–∞–Ω–∞–ª {after.channel.mention}.",
                color=discord.Color.blue()
            )
            await log_channel.send(embed=embed)
            analytics_manager.data['voice']['join'] += 1
        
        elif before.channel is not None and after.channel is None:
            embed = self.create_embed(
                title="üö™ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã—à–µ–ª –∏–∑ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞!",
                description=f"{member.mention} –≤—ã—à–µ–ª –∏–∑ –∫–∞–Ω–∞–ª–∞ {before.channel.mention}.",
                color=discord.Color.orange()
            )
            await log_channel.send(embed=embed)
            analytics_manager.data['voice']['leave'] += 1
        
        elif (before.channel is not None and after.channel is not None 
              and before.channel != after.channel):
            embed = self.create_embed(
                title="üîÄ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–µ—Ä–µ—à–µ–ª –≤ –¥—Ä—É–≥–æ–π –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª!",
                description=f"{member.mention} –ø–µ—Ä–µ—à–µ–ª –∏–∑ {before.channel.mention} –≤ {after.channel.mention}.",
                color=discord.Color.purple()
            )
            await log_channel.send(embed=embed)
        
        if before.self_mute != after.self_mute and after.channel:
            if after.self_mute:
                embed = self.create_embed(
                    title="üé§ –ú–∏–∫—Ä–æ—Ñ–æ–Ω –≤—ã–∫–ª—é—á–µ–Ω!",
                    description=f"{member.mention} –≤—ã–∫–ª—é—á–∏–ª –º–∏–∫—Ä–æ—Ñ–æ–Ω –≤ –∫–∞–Ω–∞–ª–µ {after.channel.mention}.",
                    color=discord.Color.red()
                )
                analytics_manager.data['voice']['mute'] += 1
            else:
                embed = self.create_embed(
                    title="üé§ –ú–∏–∫—Ä–æ—Ñ–æ–Ω –≤–∫–ª—é—á–µ–Ω!",
                    description=f"{member.mention} –≤–∫–ª—é—á–∏–ª –º–∏–∫—Ä–æ—Ñ–æ–Ω –≤ –∫–∞–Ω–∞–ª–µ {after.channel.mention}.",
                    color=discord.Color.green()
                )
                analytics_manager.data['voice']['unmute'] += 1
            await log_channel.send(embed=embed)
        
        if before.self_deaf != after.self_deaf and after.channel:
            if after.self_deaf:
                embed = self.create_embed(
                    title="üéß –ù–∞—É—à–Ω–∏–∫–∏ –≤—ã–∫–ª—é—á–µ–Ω—ã!",
                    description=f"{member.mention} –≤—ã–∫–ª—é—á–∏–ª –Ω–∞—É—à–Ω–∏–∫–∏ –≤ –∫–∞–Ω–∞–ª–µ {after.channel.mention}.",
                    color=discord.Color.red()
                )
            else:
                embed = self.create_embed(
                    title="üéß –ù–∞—É—à–Ω–∏–∫–∏ –≤–∫–ª—é—á–µ–Ω—ã!",
                    description=f"{member.mention} –≤–∫–ª—é—á–∏–ª –Ω–∞—É—à–Ω–∏–∫–∏ –≤ –∫–∞–Ω–∞–ª–µ {after.channel.mention}.",
                    color=discord.Color.green()
                )
            await log_channel.send(embed=embed)
        
        if not before.self_stream and after.self_stream and after.channel:
            embed = self.create_embed(
                title="üì∫ –ù–∞—á–∞–ª–∞—Å—å –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —ç–∫—Ä–∞–Ω–∞!",
                description=f"{member.mention} –Ω–∞—á–∞–ª –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—é —ç–∫—Ä–∞–Ω–∞ –≤ {after.channel.mention}.",
                color=discord.Color.teal()
            )
            await log_channel.send(embed=embed)
        
        if before.self_stream and not after.self_stream and before.channel:
            embed = self.create_embed(
                title="üõë –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —ç–∫—Ä–∞–Ω–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!",
                description=f"{member.mention} –∑–∞–∫–æ–Ω—á–∏–ª –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—é —ç–∫—Ä–∞–Ω–∞ –≤ {before.channel.mention}.",
                color=discord.Color.dark_teal()
            )
            await log_channel.send(embed=embed) 
        analytics_manager.save() 