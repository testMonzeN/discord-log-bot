"""
–ö–æ–º–∞–Ω–¥—ã –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –ø–æ —Ä–æ–ª—è–º, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º, —Å–æ–æ–±—â–µ–Ω–∏—è–º, –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è–º, –≥–æ–ª–æ—Å–æ–≤–æ–π –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏, –∫–∞–Ω–∞–ª–∞–º, –±–∞–Ω–∞–º –∏ –º—å—é—Ç–∞–º Discord-—Å–µ—Ä–≤–µ—Ä–∞.
"""

import discord
from discord.ext import commands
from bot.analytics.analytics_manager import analytics_manager

class StatsCommands(commands.Cog):
    """
    –ö–æ–º–∞–Ω–¥—ã –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ –ø–æ –≤—Å–µ–º –∫–ª—é—á–µ–≤—ã–º —Å–æ–±—ã—Ç–∏—è–º Discord.
    """
    def __init__(self, bot):
        self.bot = bot

    @commands.command(name='stats')
    async def stats(self, ctx, stat_type: str = None):
        if not stat_type:
            embed = discord.Embed(title='‚ÑπÔ∏è –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏',
                                  description='–£–∫–∞–∂–∏—Ç–µ —Ç–∏–ø —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:\n'
                                  'üé® role\n'
                                  'üë§ users\n'
                                  'üí¨ message\n'
                                  'üé´ invite\n'
                                  'üéß voice\n'
                                  'üìÅ channel\n'
                                  'üî® ban\n'
                                  'üîá mute',
                                  color=0x7289da)
            await ctx.send(embed=embed)
            return
        if stat_type == 'role':
            await self.send_role_stats(ctx)
        elif stat_type == 'users':
            await self.send_user_stats(ctx)
        elif stat_type == 'message':
            await self.send_message_stats(ctx)
        elif stat_type == 'invite':
            await self.send_invite_stats(ctx)
        elif stat_type == 'voice':
            await self.send_voice_stats(ctx)
        elif stat_type == 'channel':
            await self.send_channel_stats(ctx)
        elif stat_type == 'ban':
            await self.send_ban_stats(ctx)
        elif stat_type == 'mute':
            await self.send_mute_stats(ctx)
        else:
            embed = discord.Embed(title='‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏',
                                  description=(
                                    '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –æ–¥–Ω—É –∏–∑ –∫–æ–º–∞–Ω–¥:\n'
                                    '‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî\n'
                                    'üé®  `!stats role` ‚Äî —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–æ–ª–µ–π\n'
                                    'üë§  `!stats users` ‚Äî —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π\n'
                                    'üí¨  `!stats message` ‚Äî —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π\n'
                                    'üé´  `!stats invite` ‚Äî —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏–Ω–≤–∞–π—Ç–æ–≤\n'
                                    'üéß  `!stats voice` ‚Äî —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –≤–æ–π—Å–æ–≤\n'
                                    'üìÅ  `!stats channel` ‚Äî —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫–∞–Ω–∞–ª–æ–≤\n'
                                    'üî®  `!stats ban` ‚Äî —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –±–∞–Ω–æ–≤\n'
                                    'üîá  `!stats mute` ‚Äî —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –º—É—Ç–æ–≤'
                                  ),
                                  color=0xff5555)
            await ctx.send(embed=embed)

    @commands.group(name='restore_analytics', invoke_without_command=True)
    @commands.has_permissions(administrator=True)
    async def restore_analytics(self, ctx, filename: str = None):
        """
        –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç analytics.json –∏–∑ —Ä–µ–∑–µ—Ä–≤–Ω–æ–π –∫–æ–ø–∏–∏ backups/<filename> –∏–ª–∏ –≤—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ –±—ç–∫–∞–ø–æ–≤.
        """
        import os, shutil
        backup_dir = 'backups'
        if not filename:
            files = os.listdir(backup_dir) if os.path.exists(backup_dir) else []
            if not files:
                embed = discord.Embed(title='‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ä–µ–∑–µ—Ä–≤–Ω—ã—Ö –∫–æ–ø–∏–π.', color=0xff5555)
                await ctx.send(embed=embed)
                return
            files = sorted(files, reverse=True)
            embed = discord.Embed(title='üì¶ –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–µ–∑–µ—Ä–≤–Ω—ã–µ –∫–æ–ø–∏–∏',
                                  description='–£–∫–∞–∂–∏—Ç–µ –∏–º—è —Ñ–∞–π–ª–∞ –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ `/restore_analytics list` –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –≤—Å–µ—Ö –±—ç–∫–∞–ø–æ–≤.\n\n–î–æ—Å—Ç—É–ø–Ω—ã–µ –±—ç–∫–∞–ø—ã:' + '\n' + '\n'.join(f'- `{f}`' for f in files),
                                  color=0x7289da)
            await ctx.send(embed=embed)
            return
        if filename == 'list':
            await self.restore_analytics_list(ctx)
            return
        backup_path = os.path.join(backup_dir, filename)
        if not os.path.exists(backup_path):
            embed = discord.Embed(title='‚ùå –û—à–∏–±–∫–∞', description=f'–§–∞–π–ª `{filename}` –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–∞–ø–∫–µ backups.', color=0xff5555)
            await ctx.send(embed=embed)
            return
        try:
            shutil.copy2(backup_path, 'analytics.json')
            embed = discord.Embed(title='‚úÖ –í–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ', description=f'–§–∞–π–ª analytics.json —É—Å–ø–µ—à–Ω–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –∏–∑ `{filename}`!', color=0x2ecc71)
            await ctx.send(embed=embed)
        except Exception as e:
            embed = discord.Embed(title='‚ùå –û—à–∏–±–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è', description=str(e), color=0xff5555)
            await ctx.send(embed=embed)

    @restore_analytics.command(name='list')
    async def restore_analytics_list(self, ctx):
        import os
        backup_dir = 'backups'
        files = os.listdir(backup_dir) if os.path.exists(backup_dir) else []
        if not files:
            embed = discord.Embed(title='‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ä–µ–∑–µ—Ä–≤–Ω—ã—Ö –∫–æ–ø–∏–π.', color=0xff5555)
            await ctx.send(embed=embed)
            return
        files = sorted(files, reverse=True)
        embed = discord.Embed(title='üì¶ –°–ø–∏—Å–æ–∫ —Ä–µ–∑–µ—Ä–≤–Ω—ã—Ö –∫–æ–ø–∏–π –∞–Ω–∞–ª–∏—Ç–∏–∫–∏',
                              description='\n'.join(f'- `{f}`' for f in files),
                              color=0x7289da)
        await ctx.send(embed=embed)

    async def send_role_stats(self, ctx):
        data = analytics_manager.data['roles']
        added = sum(data['added'].values())
        removed = sum(data['removed'].values())
        created = data.get('created', 0)
        deleted = data.get('deleted', 0)
        embed = discord.Embed(title='üé® –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ä–æ–ª—è–º', color=0x3498db)
        value = f"üéñÔ∏è –í—ã–¥–∞–Ω–æ —Ä–æ–ª–µ–π: {added}\nüóëÔ∏è –°–Ω—è—Ç–æ —Ä–æ–ª–µ–π: {removed}\n‚ú® –°–æ–∑–¥–∞–Ω–æ —Ä–æ–ª–µ–π: {created}\n‚ùå –£–¥–∞–ª–µ–Ω–æ —Ä–æ–ª–µ–π: {deleted}"
        embed.add_field(name="", value=value, inline=False)
        await ctx.send(embed=embed)

    async def send_user_stats(self, ctx):
        data = analytics_manager.data['users']
        joined = data['joined']
        left = data['left']
        top = sorted(data['top_active'].items(), key=lambda x: x[1], reverse=True)[:5]
        value = f"‚ûï –í–æ—à–ª–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {joined}\n‚ûñ –ü–æ–∫–∏–Ω—É–ª–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {left}"
        if top:
            value += "\n\nüèÜ –¢–æ–ø –∞–∫—Ç–∏–≤–Ω—ã—Ö:\n" + '\n'.join([f'üèÖ <@{uid}>: {count}' for uid, count in top])
        embed = discord.Embed(title='üë§ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º', color=0x2ecc71)
        embed.add_field(name="", value=value, inline=False)
        await ctx.send(embed=embed)

    async def send_message_stats(self, ctx):
        data = analytics_manager.data['messages']
        sent = data['sent']
        deleted = data['deleted']
        edited = data['edited']
        top = sorted(data['top_senders'].items(), key=lambda x: x[1], reverse=True)[:5]
        value = f"‚úâÔ∏è –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {sent}\nüóëÔ∏è –£–¥–∞–ª–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {deleted}\n‚úèÔ∏è –û—Ç—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–π: {edited}"
        if top:
            value += "\n\nüèÜ –¢–æ–ø –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª–µ–π:\n" + '\n'.join([f'üèÖ <@{uid}>: {count}' for uid, count in top])
        embed = discord.Embed(title='üí¨ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Å–æ–æ–±—â–µ–Ω–∏—è–º', color=0xe67e22)
        embed.add_field(name="", value=value, inline=False)
        await ctx.send(embed=embed)

    async def send_invite_stats(self, ctx):
        data = analytics_manager.data['invites']
        created = data['created']
        used = data['used']
        value = f"‚ú® –°–æ–∑–¥–∞–Ω–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π: {created}\n‚úÖ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–π: {used}"
        embed = discord.Embed(title='üé´ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è–º', color=0x9b59b6)
        embed.add_field(name="", value=value, inline=False)
        await ctx.send(embed=embed)

    async def send_voice_stats(self, ctx):
        data = analytics_manager.data['voice']
        join = data['join']
        leave = data['leave']
        mute = data['mute']
        unmute = data['unmute']
        value = f"üîä –í—Ö–æ–¥–æ–≤ –≤ –≥–æ–ª–æ—Å–æ–≤—ã–µ: {join}\nüö™ –í—ã—Ö–æ–¥–æ–≤ –∏–∑ –≥–æ–ª–æ—Å–æ–≤—ã—Ö: {leave}\nüîá –ú—å—é—Ç–æ–≤: {mute}\nüîä –†–∞–∑–º—å—é—Ç–æ–≤: {unmute}"
        embed = discord.Embed(title='üéß –ì–æ–ª–æ—Å–æ–≤–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å', color=0x1abc9c)
        embed.add_field(name="", value=value, inline=False)
        await ctx.send(embed=embed)

    async def send_channel_stats(self, ctx):
        data = analytics_manager.data['channels']
        created = data['created']
        deleted = data['deleted']
        value = f"‚ú® –°–æ–∑–¥–∞–Ω–æ –∫–∞–Ω–∞–ª–æ–≤: {created}\n‚ùå –£–¥–∞–ª–µ–Ω–æ –∫–∞–Ω–∞–ª–æ–≤: {deleted}"
        embed = discord.Embed(title='üìÅ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –∫–∞–Ω–∞–ª–∞–º', color=0xf1c40f)
        embed.add_field(name="", value=value, inline=False)
        await ctx.send(embed=embed)

    async def send_ban_stats(self, ctx):
        data = analytics_manager.data['bans']
        banned = data['banned']
        unbanned = data['unbanned']
        value = f"‚õî –ë–∞–Ω–æ–≤: {banned}\n‚úÖ –†–∞–∑–±–∞–Ω–æ–≤: {unbanned}"
        embed = discord.Embed(title='üî® –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –±–∞–Ω–∞–º', color=0xe74c3c)
        embed.add_field(name="", value=value, inline=False)
        await ctx.send(embed=embed)

    async def send_mute_stats(self, ctx):
        data = analytics_manager.data['mutes']
        timeout = data['timeout']
        untimeout = data['untimeout']
        value = f"‚è≥ –í—ã–¥–∞–Ω–æ —Ç–∞–π–º-–∞—É—Ç–æ–≤: {timeout}\n‚úÖ –°–Ω—è—Ç–æ —Ç–∞–π–º-–∞—É—Ç–æ–≤: {untimeout}"
        embed = discord.Embed(title='üîá –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ –º—å—é—Ç–∞–º (—Ç–∞–π–º-–∞—É—Ç–∞–º)', color=0x95a5a6)
        embed.add_field(name="", value=value, inline=False)
        await ctx.send(embed=embed)

def setup(bot):
    bot.add_cog(StatsCommands(bot)) 